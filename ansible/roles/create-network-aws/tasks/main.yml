---
# tasks file for create-network-aws
- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: lu_obelion
    cidr_block: 10.0.0.0/16
    dns_support: yes
    dns_hostnames: yes
    region: "{{ aws_region }}"
  register: vpc

- name: Create public subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    map_public: yes
    region: "{{ aws_region }}"
  with_items:
    - { cidr: "10.0.1.0/24", az: "{{ az1 }}" }
    - { cidr: "10.0.2.0/24", az: "{{ az2 }}" }
  register: public_subnets

- name: Create private subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    region: "{{ aws_region }}"
  with_items:
    - { cidr: "10.0.3.0/24", az: "{{ az1 }}" }
    - { cidr: "10.0.4.0/24", az: "{{ az2 }}" }
  register: private_subnets

- name: Create Internet Gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
  register: igw

- name: Create route table for public subnets
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc.vpc.id }}"
    subnets: "{{ public_subnets.results | map(attribute='subnet.id') | list }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
    tags:
      Name: lu-public-rt
    region: "{{ aws_region }}"
  register: lu_public_rt

- name: Create security group for public subnets
  amazon.aws.ec2_security_group:
    name: lpublic_sg
    description: Public subnet security group
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
    rules: "{{ pub_rules }}"
  register: public_sg


- name: Debug public_sg variable
  debug:
    var: public_sg



- name: Create security group for private subnets
  amazon.aws.ec2_security_group:
    name: lprivate_sg
    description: Private subnet security group
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
    rules: "{{ pri_rules }}"
  register: private_sg

################## Not necessary #########################

- name: Gather information about VPC
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:Name": lu_obelion
    aws_region: "{{ aws_region }}"
  register: vpc_info

- name: Print VPC information
  debug:
    var: vpc_info

- name: Save aws_vpc information to file
  copy:
    content: "{{ vpc_info | to_nice_json }}"
    dest: "{{ aws_vpc_info }}"


- name: Gather subnet information using AWS CLI
  shell: "aws ec2 describe-subnets --filters Name=vpc-id,Values={{ vpc_info.vpcs[0].id }} --region {{ aws_region }}"
  register: subnet_info
  changed_when: false
  failed_when: subnet_info.rc != 0
  check_mode: no

- name: Print subnet information
  debug:
    var: subnet_info


- name: Save aws_sub information to file
  copy:
    content: "{{ subnet_info | to_nice_json }}"
    dest: "{{ aws_sub_info }}"

################################### ################################

- name: Aggregate resource information
  set_fact:
    combined_resources:
      vpc: "{{ vpc }}"
      public_subnets: "{{ public_subnets }}"
      private_subnets: "{{ private_subnets }}"
      internet_gateway: "{{ igw }}"
      public_route_table: "{{ lu_public_rt }}"
      security_group: "{{ public_sg }}"
      region: "{{ aws_region }}"


- name: Debug aws_info if region is not default
  debug:
    var: combined_resources


- name: Save AWS VPC information to a file
  copy:
    content: "{{ combined_resources | to_nice_json }}"
    dest: "{{ aws_info }}"

